{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/tidy-up/tidy-up/src/Firebase/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth, db } from \"./Firebase\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [role, setRole] = useState(\"user\");\n  const [paymentConfirmed, setPaymentConfirmed] = useState(false);\n\n  function notify() {\n    toast.success(\"Payment Successful\", {\n      position: \"top-right\"\n    });\n  }\n\n  function getRole() {\n    return role;\n  }\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return auth.currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return auth.currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      let userData = {\n        role: \"user\"\n      };\n\n      if (user) {\n        // console.log(user.uid);\n        db.collection(\"users\").doc(user.uid).get().then(doc => {\n          userData = doc.data(); // console.log(doc.data());\n          // console.log(\"this is new \" + userData.role);\n\n          setRole(userData.role); // console.log(getRole());\n        });\n        setCurrentUser(user);\n        setLoading(false);\n      } else {\n        setRole(\"user\");\n        setCurrentUser(user);\n        setLoading(false);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    getRole,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n    notify,\n    paymentConfirmed,\n    setPaymentConfirmed\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"H7BWilSBx0YU7GkJ/2XweQX2Wko=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/mac/Desktop/tidy-up/tidy-up/src/Firebase/AuthContext.js"],"names":["React","useContext","useState","useEffect","auth","db","toast","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","role","setRole","paymentConfirmed","setPaymentConfirmed","notify","success","position","getRole","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","unsubscribe","onAuthStateChanged","user","userData","collection","doc","uid","get","then","data","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { auth, db } from \"./Firebase\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext); \n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [role, setRole] = useState(\"user\");\n  const [paymentConfirmed, setPaymentConfirmed] = useState(false);\n  function notify() {\n    toast.success(\"Payment Successful\", {\n      position: \"top-right\",\n    });\n  }\n\n  function getRole() {\n    return role;\n  }\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return auth.currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return auth.currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      let userData = { role: \"user\" };\n      if (user) {\n        // console.log(user.uid);\n         db.collection(\"users\")\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            userData = doc.data();\n            // console.log(doc.data());\n            // console.log(\"this is new \" + userData.role);\n            setRole(userData.role);\n            // console.log(getRole());\n          });\n        setCurrentUser(user);\n        setLoading(false);\n      } else {\n        setRole(\"user\");\n        setCurrentUser(user);\n        setLoading(false);\n      }\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    getRole,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n    notify,\n    paymentConfirmed,\n    setPaymentConfirmed,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}